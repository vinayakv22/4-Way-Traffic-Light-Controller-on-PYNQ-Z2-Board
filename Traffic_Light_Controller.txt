`timescale 1ns / 1ps

module Traffic_Light_Controller(


    input clk,rst,
    output reg [2:0]light_M1,
    output reg [2:0]light_S1,
    output reg [2:0]light_MTR,
    output reg [2:0]light_MTL,
    output reg [2:0]light_M2, 
    output reg [2:0]light_S2
    );
    
    parameter  S1=0, S2=1, S3 =2, S4=3, S5=4, S6=5, S7 = 6, S8 = 7, S9 = 8, S10 = 9, S11 = 10, S12 = 11, S13 = 12, S14 = 13;
    reg [3:0]count;
    reg[2:0] ps;
    parameter  sec7=7,sec5=5,sec2=2,sec3=3;

   
    
    always@(posedge clk or posedge rst)
        begin
        if(rst==1)
        begin
        ps<=S1;
        count<=0;
        end
        else
        
      
       
            
            case(ps)
                S1: if(count<sec7)
                        begin
                        ps<=S1;
                        count<=count+1;
                        end
                    else
                        begin
                        ps<=S2;
                        count<=0;
                        end
                S2: if(count<sec2)
                        begin
                        ps<=S2;
                        count<=count+1;
                        end

                    else
                        begin
                        ps<=S3;
                        count<=0;
                        end
                S3: if(count<sec5)
                        begin
                        ps<=S3;
                        count<=count+1;
                        end

                    else
                        begin
                        ps<=S4;
                        count<=0;
                        end
                S4:if(count<sec2)
                        begin
                        ps<=S4;
                        count<=count+1;
                        end

                    else
                        begin
                        ps<=S5;
                        count<=0;
                        end
                S5:if(count<sec5)
                        begin
                        ps<=S5;
                        count<=count+1;
                        end

                    else
                        begin
                        ps<=S6;
                        count<=0;
                        end

                S6:if(count<sec2)
                        begin
                        ps<=S6;
                        count<=count+1;
                        end

                    else
                        begin
                        ps<=S7;
                        count<=0;
                        end
                S7:if(count<sec5)
                        begin
                        ps<=S7;
                        count<=count+1;
                        end

                    else
                        begin
                        ps<=S8;
                        count<=0;
                        end
                S8:if(count<sec2)
                        begin
                        ps<=S8;
                        count<=count+1;
                        end

                    else
                        begin
                        ps<=S9;
                        count<=0;
                        end
                S9:if(count<sec5)
                        begin
                        ps<=S9;
                        count<=count+1;
                        end

                    else
                        begin
                        ps<=S10;
                        count<=0;
                        end
                S10:if(count<sec2)
                        begin
                        ps<=S10;
                        count<=count+1;
                        end

                    else
                        begin
                        ps<=S11;
                        count<=0;
                        end
                S11:if(count<sec3)
                        begin
                        ps<=S11;
                        count<=count+1;
                        end

                    else
                        begin
                        ps<=S12;
                        count<=0;
                        end
                S12:if(count<sec2)
                        begin
                        ps<=S8;
                        count<=count+1;
                        end

                    else
                        begin
                        ps<=S13;
                        count<=0;
                        end
                S13:if(count<sec3)
                        begin
                        ps<=S13;
                        count<=count+1;
                        end

                    else
                        begin
                        ps<=S14;
                        count<=0;
                        end
                S14:if(count<sec2)
                        begin
                        ps<=S14;
                        count<=count+1;
                        end

                    else
                        begin
                        ps<=S1;
                        count<=0;
                        end
                default: ps<=S1;
                endcase
            end   

            always@(ps)    
            begin
                
                case(ps)
                     
                    S1:
                    begin
                       light_M1<=3'b001;
                       light_M2<=3'b001;
                       light_MTR<=3'b100;
                       light_MTL<=3'b100;
                       light_S1<=3'b100;
                       light_S2<=3'b100;
                    end
                    S2:
                    begin 
                       light_M1<=3'b001;
                       light_M2<=3'b010;
                       light_MTR<=3'b100;
                       light_MTL<=3'b100;
                       light_S1<=3'b100;
                       light_S2<=3'b100;
                    end
                    S3:
                    begin
                       light_M1<=3'b001;
                       light_M2<=3'b100;
                       light_MTR<=3'b001;
                       light_MTL<=3'b100;
                       light_S1<=3'b100;
                       light_S2<=3'b100;
                    end
                    S4:
                    begin
                       light_M1<=3'b001;
                       light_M2<=3'b100;
                       light_MTR<=3'b010;
                       light_MTL<=3'b100;
                       light_S1<=3'b100;
                       light_S2<=3'b100;
                    end
                    S5:
                    begin
                       light_M1<=3'b001;
                       light_M2<=3'b100;
                       light_MTR<=3'b100;
                       light_MTL<=3'b001;
                       light_S1<=3'b100;
                       light_S2<=3'b100;
                    end
                    S6:
                    begin 
                       light_M1<=3'b010;
                       light_M2<=3'b100;
                       light_MTR<=3'b100;
                       light_MTL<=3'b010;
                       light_S1<=3'b100;
                       light_S2<=3'b100;
                    end
                    S7:
                    begin 
                       light_M1<=3'b100;
                       light_M2<=3'b001;
                       light_MTR<=3'b001;
                       light_MTL<=3'b100;
                       light_S1<=3'b100;
                       light_S2<=3'b100;
                    end
                    S8:
                    begin 
                       light_M1<=3'b100;
                       light_M2<=3'b001;
                       light_MTR<=3'b010;
                       light_MTL<=3'b100;
                       light_S1<=3'b100;
                       light_S2<=3'b100;
                    end
                    S9:
                    begin 
                       light_M1<=3'b100;
                       light_M2<=3'b001;
                       light_MTR<=3'b100;
                       light_MTL<=3'b001;
                       light_S1<=3'b100;
                       light_S2<=3'b100;
                    end
                    S10:
                    begin 
                       light_M1<=3'b100;
                       light_M2<=3'b010;
                       light_MTR<=3'b100;
                       light_MTL<=3'b010;
                       light_S1<=3'b100;
                       light_S2<=3'b100;
                    end
                    S11:
                    begin 
                       light_M1<=3'b100;
                       light_M2<=3'b100;
                       light_MTR<=3'b100;
                       light_MTL<=3'b100;
                       light_S1<=3'b001;
                       light_S2<=3'b100;
                    end
                    S12:
                    begin 
                       light_M1<=3'b100;
                       light_M2<=3'b100;
                       light_MTR<=3'b100;
                       light_MTL<=3'b100;
                       light_S1<=3'b010;
                       light_S2<=3'b100;
                    end
                    S13:
                    begin 
                       light_M1<=3'b100;
                       light_M2<=3'b100;
                       light_MTR<=3'b100;
                       light_MTL<=3'b100;
                       light_S1<=3'b100;
                       light_S2<=3'b001;
                    end
                    S14:
                    begin 
                       light_M1<=3'b100;
                       light_M2<=3'b100;
                       light_MTR<=3'b100;
                       light_MTL<=3'b100;
                       light_S1<=3'b100;
                       light_S2<=3'b010;
                    end
                    default:
                    begin 
                       light_M1<=3'b000;
                       light_M2<=3'b000;
                       light_MTR<=3'b000;
                       light_MTL<=3'b000;
                       light_S1<=3'b000;
                       light_S2<=3'b000;
                    end
                    endcase
            end                
              

endmodule

